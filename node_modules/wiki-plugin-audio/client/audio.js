
/*
 * Federated Wiki : Audio Plugin
 *
 * Licensed under the MIT license.
 * https://github.com/fedwiki/wiki-plugin-audio/blob/master/LICENSE.txt
 */

(function() {
  var bind, embed, emit, parse;

  parse = function(text) {
    var firstLine, i, len, line, ref, result;
    if (text == null) {
      text = '';
    }
    result = {};
    firstLine = true;
    ref = text.split(/\r\n?|\n/);
    for (i = 0, len = ref.length; i < len; i++) {
      line = ref[i];
      if (firstLine) {
        result.key = line;
        firstLine = false;
      } else {
        result.caption || (result.caption = ' ');
        result.caption += line + ' ';
      }
    }
    return result;
  };

  embed = function(arg) {
    var key;
    key = arg.key;
    return "<iframe\n  srcdoc='<audio src=\"" + key + "\" preload=\"none\" controls style=\"width: 100%;\"><a href=\"" + key + "\">download audio</a></audio>'\n  width=\"100%\" frameborder=0 seamless scrolling=\"no\" height=\"40px\">\n</iframe>";
  };

  emit = function($item, item) {
    var result;
    result = parse(item.text);
    return $item.append((embed(result)) + "\n<br>\n<i>" + (wiki.resolveLinks(result.caption || "(no caption)")) + "</i>");
  };

  bind = function($item, item) {
    return $item.dblclick(function() {
      return wiki.textEditor($item, item);
    });
  };

  if (typeof window !== "undefined" && window !== null) {
    window.plugins.audio = {
      emit: emit,
      bind: bind
    };
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = {
      parse: parse,
      embed: embed
    };
  }

}).call(this);

//# sourceMappingURL=audio.js.map
