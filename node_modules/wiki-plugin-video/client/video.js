
/*
 * Federated Wiki : Video Plugin
 *
 * Licensed under the MIT license.
 * https://github.com/fedwiki/wiki-plugin-video/blob/master/LICENSE.txt
 */

(function() {
  var bind, embed, emit, parse;

  parse = function(text) {
    var args, i, len, line, ref, result;
    if (text == null) {
      text = '';
    }
    result = {};
    ref = text.split(/\r\n?|\n/);
    for (i = 0, len = ref.length; i < len; i++) {
      line = ref[i];
      if (args = line.match(/^\s*([A-Z0-9]+)\s+([\w\.\-\/+0-9]+)\s*$/)) {
        result.player = args[1];
        result.options = '';
        result.key = args[2];
      } else if (args = line.match(/^\s*([A-Z0-9]+)\s+([A-Za-z\,]+)\s+([\w\.\-\/+0-9]+)\s*$/)) {
        result.player = args[1];
        result.options = args[2];
        result.key = args[3];
      } else {
        result.caption || (result.caption = ' ');
        result.caption += line + ' ';
      }
    }
    return result;
  };

  embed = function(arg) {
    var key, options, player;
    player = arg.player, options = arg.options, key = arg.key;
    switch (player) {
      case 'YOUTUBE':
        if (options.toUpperCase() === "PLAYLIST") {
          return "<iframe\n  width=\"420\" height=\"236\"\n  src=\"https://www.youtube-nocookie.com/embed/videoseries?list=" + key + "\"\n  frameborder=\"0\"\n  allowfullscreen>\n</iframe>";
        } else {
          return "<iframe\n  width=\"420\" height=\"236\"\n  src=\"https://www.youtube-nocookie.com/embed/" + key + "?rel=0\"\n  frameborder=\"0\"\n  allowfullscreen>\n</iframe>";
        }
        break;
      case 'VIMEO':
        return "<iframe\n  src=\"https://player.vimeo.com/video/" + key + "?title=0&amp;byline=0&amp;portrait=0\"\n  width=\"420\" height=\"236\"\n  frameborder=\"0\"\n  allowfullscreen>\n</iframe>";
      case 'ARCHIVE':
        return "<iframe\n  src=\"https://archive.org/embed/" + key + "\"\n  width=\"420\" height=\"315\"\n  frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"\n  allowfullscreen>\n</iframe>";
      case 'TED':
        return "<iframe\n  src=\"https://embed-ssl.ted.com/talks/" + key + ".html\"\n  width=\"420\" height=\"300\"\n  frameborder=\"0\" scrolling=\"no\" webkitAllowFullScreen mozallowfullscreen\n  allowFullScreen>\n</iframe>";
      case 'TEDX':
        return "<iframe\n  src=\"http://tedxtalks.ted.com/video/" + key + "/player?layout=&amp;read_more=1\"\n  width=\"420\" height=\"300\"\n  frameborder=\"0\" scrolling=\"no\">\n</iframe>";
      case 'CHANNEL9':
        return "<iframe\n  src=\"https://channel9.msdn.com/" + key + "/player\"\n  width=\"420\" height=\"236\"\n  allowFullScreen frameBorder=\"0\">\n</iframe>";
      default:
        return "(unknown player)";
    }
  };

  emit = function($item, item) {
    var result;
    result = parse(item.text);
    return $item.append((embed(result)) + "\n<br>\n<i>" + (wiki.resolveLinks(result.caption || "(no caption)")) + "</i>");
  };

  bind = function($item, item) {
    return $item.dblclick(function() {
      return wiki.textEditor($item, item);
    });
  };

  if (typeof window !== "undefined" && window !== null) {
    window.plugins.video = {
      emit: emit,
      bind: bind
    };
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = {
      parse: parse,
      embed: embed
    };
  }

}).call(this);

//# sourceMappingURL=video.js.map
